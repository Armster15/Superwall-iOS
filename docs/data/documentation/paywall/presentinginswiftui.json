{"primaryContentSections":[{"kind":"content","content":[{"anchor":"Overview","level":2,"type":"heading","text":"Overview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"To present a paywall in SwiftUI, you attach the "},{"type":"codeVoice","code":".presentPaywall(isPresented:onPresent:onDismiss:onFail:)"},{"type":"text","text":" view modifier to a view. It shows the paywall when the Boolean value you provide is "},{"type":"codeVoice","code":"true"},{"type":"text","text":" and the user doesn’t have an active subscription. You can then receive callbacks associated with the paywall presentation state."}]},{"type":"aside","style":"important","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The paywall assigned to the user is determined by your settings in the "},{"type":"reference","isActive":true,"identifier":"https:\/\/superwall.com\/dashboard"},{"type":"text","text":". Presented paywalls are "},{"type":"strong","inlineContent":[{"type":"text","text":"sticky"}]},{"type":"text","text":". This means that once a user is assigned a paywall, they will continue to see the same paywall, even when the paywall is turned off, unless you reassign them to a new one."}]}]},{"anchor":"Attaching-the-View-Modifier","level":3,"type":"heading","text":"Attaching the View Modifier"},{"type":"paragraph","inlineContent":[{"type":"text","text":"To present a paywall, you attach the "},{"type":"codeVoice","code":".presentPaywall(isPresented:onPresent:onDismiss:onFail:)"},{"type":"text","text":" view modifier to a view. You provide a binding to a "},{"type":"codeVoice","code":"Bool"},{"type":"text","text":" to control when to show the paywall."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"For example, here’s how you might present a paywall when the user toggles the "},{"type":"codeVoice","code":"showPaywall"},{"type":"text","text":" variable by tapping on the "},{"type":"strong","inlineContent":[{"type":"text","text":"Toggle Paywall"}]},{"type":"text","text":" button:"}]},{"type":"codeListing","syntax":"swift","code":["struct ContentView: View {","  @State private var showPaywall = false","","  var body: some View {","    Button(","      action: {","        showPaywall.toggle()","      },","      label: {","        Text(\"Toggle Paywall\")","      }","    )","    .presentPaywall(","      isPresented: $showPaywall,","      onPresent: { paywallInfo in","        print(\"paywall info is\", paywallInfo)","      },","      onDismiss: { result in","        switch result.state {","        case .closed:","          print(\"User dismissed the paywall.\")","        case .purchased(productId: let productId):","          print(\"Purchased a product with id \\(productId), then dismissed.\")","        case .restored:","          print(\"Restored purchases, then dismissed.\")","        }","      },","      onFail: { error in","        print(\"did fail\", error)","      }","    )","  }","}"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"The "},{"type":"codeVoice","code":"onPresent"},{"type":"text","text":", "},{"type":"codeVoice","code":"onDismiss"},{"type":"text","text":", and "},{"type":"codeVoice","code":"onFail"},{"type":"text","text":" callbacks are optional. They provide the following functionality:"}]},{"type":"table","rows":[[[{"type":"paragraph","inlineContent":[{"type":"text","text":"Parameter"}]}],[{"type":"paragraph","inlineContent":[{"type":"text","text":"Type"}]}],[{"type":"paragraph","inlineContent":[{"type":"text","text":"Functionality"}]}]],[[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"onPresent"}]}],[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"(PaywallInfo?) -> Void"}]}],[{"type":"paragraph","inlineContent":[{"type":"text","text":"A closure that’s called after the paywall is presented. Accepts an optional "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Paywall\/documentation\/Paywall\/PaywallInfo"},{"type":"text","text":" object containing information about the paywall. Defaults to "},{"type":"codeVoice","code":"nil"},{"type":"text","text":"."}]}]],[[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"onDismiss"}]}],[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"(PaywallDismissalResult) -> Void"}]}],[{"type":"paragraph","inlineContent":[{"type":"text","text":"The closure to execute after the paywall is dismissed by the user, by way of purchasing, restoring or manually dismissing. Accepts a "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Paywall\/documentation\/Paywall\/PaywallDismissalResult"},{"type":"text","text":" object. This has a "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Paywall\/documentation\/Paywall\/PaywallDismissalResult\/paywallInfo"},{"type":"text","text":" property containing information about the paywall and a state that tells you why the paywall was dismissed. This closure will not be called if you programmatically set isPresented to false to dismiss the paywall. Defaults to nil."}]}]],[[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"onFail"}]}],[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"(NSError) -> Void"}]}],[{"type":"paragraph","inlineContent":[{"type":"text","text":"A closure that’s called when the paywall fails to present, either because an error occurred or because all paywalls are off in the Superwall Dashboard. You should typically fallback to your previous paywall if this happens. Accepts an "},{"type":"codeVoice","code":"NSError"},{"type":"text","text":" with more details. Defaults to nil."}]}]]],"header":"row"}]}],"schemaVersion":{"major":0,"minor":1,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/paywall\/presentinginswiftui"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/Paywall\/documentation\/Paywall\/PresentingInSwiftUI","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Attach a view modifier to present a paywall and receive callbacks associated with the paywall presentation state."}],"kind":"article","metadata":{"roleHeading":"Article","title":"Presenting a Paywall with SwiftUI","role":"article","modules":[{"name":"Paywall"}]},"hierarchy":{"paths":[["doc:\/\/Paywall\/documentation\/Paywall"],["doc:\/\/Paywall\/documentation\/Paywall","doc:\/\/Paywall\/documentation\/Paywall\/Paywall"]]},"seeAlsoSections":[{"title":"Essentials","identifiers":["doc:\/\/Paywall\/documentation\/Paywall\/Ecosystem","doc:\/\/Paywall\/documentation\/Paywall\/GettingStarted","doc:\/\/Paywall\/documentation\/Paywall\/PresentingInUIKit","doc:\/\/Paywall\/documentation\/Paywall\/Triggering","doc:\/\/Paywall\/documentation\/Paywall\/Paywall"],"generated":true}],"references":{"doc://Paywall/documentation/Paywall":{"role":"collection","title":"Paywall","abstract":[{"type":"text","text":"The client SDK for "},{"type":"reference","isActive":true,"identifier":"https:\/\/superwall.com"},{"type":"text","text":", a service that lets you remotely configure, present and iterate paywalls – helping you find winners quickly."}],"identifier":"doc:\/\/Paywall\/documentation\/Paywall","kind":"symbol","type":"topic","url":"\/documentation\/paywall"},"doc://Paywall/documentation/Paywall/Paywall":{"role":"symbol","title":"Paywall","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Paywall"}],"abstract":[{"type":"text","text":"The primary class for integrating Superwall into your application. It provides access to all its featured via static functions and variables."}],"identifier":"doc:\/\/Paywall\/documentation\/Paywall\/Paywall","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Paywall"}],"url":"\/documentation\/paywall\/paywall"},"doc://Paywall/documentation/Paywall/Ecosystem":{"role":"article","title":"The Relationship Between the SDK, the Dashboard and the Presented Paywall","abstract":[{"type":"text","text":"An overview of the Superwall ecosystem."}],"identifier":"doc:\/\/Paywall\/documentation\/Paywall\/Ecosystem","kind":"article","type":"topic","url":"\/documentation\/paywall\/ecosystem"},"doc://Paywall/documentation/Paywall/PaywallDismissalResult":{"role":"symbol","title":"PaywallDismissalResult","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"PaywallDismissalResult"}],"abstract":[{"type":"text","text":"Returned as a result of a paywall dismissing. It contains information about the paywall and the reason it was dismissed."}],"identifier":"doc:\/\/Paywall\/documentation\/Paywall\/PaywallDismissalResult","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"PaywallDismissalResult"}],"url":"\/documentation\/paywall\/paywalldismissalresult"},"https://superwall.com/dashboard":{"title":"Superwall Dashboard","titleInlineContent":[{"type":"text","text":"Superwall Dashboard"}],"type":"link","identifier":"https:\/\/superwall.com\/dashboard","url":"https:\/\/superwall.com\/dashboard"},"doc://Paywall/documentation/Paywall/GettingStarted":{"role":"collectionGroup","title":"Getting Started with Paywall","abstract":[{"type":"text","text":"Configuring the SDK and its delegate."}],"identifier":"doc:\/\/Paywall\/documentation\/Paywall\/GettingStarted","kind":"article","type":"topic","url":"\/documentation\/paywall\/gettingstarted"},"doc://Paywall/documentation/Paywall/PresentingInUIKit":{"role":"article","title":"Presenting a Paywall with UIKit","abstract":[{"type":"text","text":"Call a UIKit function to present a paywall and receive callbacks associated with the paywall presentation state."}],"identifier":"doc:\/\/Paywall\/documentation\/Paywall\/PresentingInUIKit","kind":"article","type":"topic","url":"\/documentation\/paywall\/presentinginuikit"},"https://superwall.com":{"title":"Superwall","titleInlineContent":[{"type":"text","text":"Superwall"}],"type":"link","identifier":"https:\/\/superwall.com","url":"https:\/\/superwall.com"},"doc://Paywall/documentation/Paywall/PaywallInfo":{"role":"symbol","title":"PaywallInfo","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"PaywallInfo"}],"abstract":[{"type":"codeVoice","code":"PaywallInfo"},{"type":"text","text":" is the primary class used to distinguish one paywall from another. Used primarily in "},{"type":"codeVoice","code":"Paywall.present(onPresent:onDismiss)"},{"type":"text","text":"’s completion handlers."}],"identifier":"doc:\/\/Paywall\/documentation\/Paywall\/PaywallInfo","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"PaywallInfo"}],"url":"\/documentation\/paywall\/paywallinfo"},"doc://Paywall/documentation/Paywall/Triggering":{"role":"article","title":"Triggering a Paywall","abstract":[{"type":"text","text":"Show a specific paywall in your app in response to an analytical event."}],"identifier":"doc:\/\/Paywall\/documentation\/Paywall\/Triggering","kind":"article","type":"topic","url":"\/documentation\/paywall\/triggering"},"doc://Paywall/documentation/Paywall/PaywallDismissalResult/paywallInfo":{"role":"symbol","title":"paywallInfo","fragments":[{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"paywallInfo"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"PaywallInfo","preciseIdentifier":"c:@M@Paywall@objc(cs)PaywallInfo"},{"kind":"text","text":"?"}],"abstract":[{"type":"text","text":"Contains information about the dismissed paywall"}],"identifier":"doc:\/\/Paywall\/documentation\/Paywall\/PaywallDismissalResult\/paywallInfo","kind":"symbol","type":"topic","url":"\/documentation\/paywall\/paywalldismissalresult\/paywallinfo"}}}