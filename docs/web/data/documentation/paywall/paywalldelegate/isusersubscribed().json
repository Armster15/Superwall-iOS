{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"attribute","text":"@objc"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"isUserSubscribed"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"languages":["swift"],"platforms":["iOS"]}]}],"schemaVersion":{"major":0,"minor":1,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/paywall\/paywalldelegate\/isusersubscribed()"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/me.superwall.Paywall\/documentation\/Paywall\/PaywallDelegate\/isUserSubscribed()","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Decides whether a paywall should be presented programatically or by way of a trigger. A paywall will never be shown if this function returns "},{"type":"codeVoice","code":"true"},{"type":"text","text":". Return "},{"type":"codeVoice","code":"true"},{"type":"text","text":" if the user has active entitlements and "},{"type":"codeVoice","code":"false"},{"type":"text","text":" if the user does not."}],"kind":"symbol","metadata":{"role":"symbol","title":"isUserSubscribed()","roleHeading":"Instance Method","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"isUserSubscribed"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"symbolKind":"method","externalID":"c:@M@Paywall@objc(pl)PaywallDelegate(im)isUserSubscribed","required":true,"modules":[{"name":"Paywall"}]},"hierarchy":{"paths":[["doc:\/\/me.superwall.Paywall\/documentation\/Paywall","doc:\/\/me.superwall.Paywall\/documentation\/Paywall\/PaywallDelegate"]]},"references":{"doc://me.superwall.Paywall/documentation/Paywall/PaywallDelegate":{"role":"symbol","title":"PaywallDelegate","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"PaywallDelegate"}],"abstract":[{"type":"text","text":"Methods for managing important Paywall lifecycle events. For example, telling the developer when to initiate checkout on a specific "},{"type":"codeVoice","code":"SKProduct"},{"type":"text","text":" and when to try to restore a transaction. Also includes hooks for you to log important analytics events to your product analytics tool."}],"identifier":"doc:\/\/me.superwall.Paywall\/documentation\/Paywall\/PaywallDelegate","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"PaywallDelegate"}],"url":"\/documentation\/paywall\/paywalldelegate"},"doc://me.superwall.Paywall/documentation/Paywall":{"role":"collection","title":"Paywall","abstract":[],"identifier":"doc:\/\/me.superwall.Paywall\/documentation\/Paywall","kind":"symbol","type":"topic","url":"\/documentation\/paywall"},"doc://me.superwall.Paywall/documentation/Paywall/PaywallDelegate/isUserSubscribed()":{"role":"symbol","title":"isUserSubscribed()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"isUserSubscribed"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"abstract":[{"type":"text","text":"Decides whether a paywall should be presented programatically or by way of a trigger. A paywall will never be shown if this function returns "},{"type":"codeVoice","code":"true"},{"type":"text","text":". Return "},{"type":"codeVoice","code":"true"},{"type":"text","text":" if the user has active entitlements and "},{"type":"codeVoice","code":"false"},{"type":"text","text":" if the user does not."}],"identifier":"doc:\/\/me.superwall.Paywall\/documentation\/Paywall\/PaywallDelegate\/isUserSubscribed()","kind":"symbol","required":true,"type":"topic","url":"\/documentation\/paywall\/paywalldelegate\/isusersubscribed()"}}}