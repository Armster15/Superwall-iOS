{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"attribute","text":"@objc"},{"kind":"text","text":" "},{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"PaywallDelegate"}],"languages":["swift"],"platforms":["iOS"]}]}],"schemaVersion":{"major":0,"minor":1,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/paywall\/paywalldelegate"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/me.superwall.Paywall\/documentation\/Paywall\/PaywallDelegate","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Methods for managing important Paywall lifecycle events. For example, telling the developer when to initiate checkout on a specific "},{"type":"codeVoice","code":"SKProduct"},{"type":"text","text":" and when to try to restore a transaction. Also includes hooks for you to log important analytics events to your product analytics tool."}],"kind":"symbol","metadata":{"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"PaywallDelegate"}],"title":"PaywallDelegate","roleHeading":"Protocol","role":"symbol","symbolKind":"protocol","externalID":"c:@M@Paywall@objc(pl)PaywallDelegate","modules":[{"name":"Paywall"}],"navigatorTitle":[{"kind":"identifier","text":"PaywallDelegate"}]},"hierarchy":{"paths":[["doc:\/\/me.superwall.Paywall\/documentation\/Paywall"]]},"topicSections":[{"title":"Instance Methods","identifiers":["doc:\/\/me.superwall.Paywall\/documentation\/Paywall\/PaywallDelegate\/didDismissPaywall()","doc:\/\/me.superwall.Paywall\/documentation\/Paywall\/PaywallDelegate\/didPresentPaywall()","doc:\/\/me.superwall.Paywall\/documentation\/Paywall\/PaywallDelegate\/handleCustomPaywallAction(withName:)","doc:\/\/me.superwall.Paywall\/documentation\/Paywall\/PaywallDelegate\/handleLog(level:scope:message:info:error:)","doc:\/\/me.superwall.Paywall\/documentation\/Paywall\/PaywallDelegate\/isUserSubscribed()","doc:\/\/me.superwall.Paywall\/documentation\/Paywall\/PaywallDelegate\/purchase(product:)","doc:\/\/me.superwall.Paywall\/documentation\/Paywall\/PaywallDelegate\/restorePurchases(completion:)","doc:\/\/me.superwall.Paywall\/documentation\/Paywall\/PaywallDelegate\/trackAnalyticsEvent(withName:params:)","doc:\/\/me.superwall.Paywall\/documentation\/Paywall\/PaywallDelegate\/willDismissPaywall()","doc:\/\/me.superwall.Paywall\/documentation\/Paywall\/PaywallDelegate\/willOpenDeepLink(url:)","doc:\/\/me.superwall.Paywall\/documentation\/Paywall\/PaywallDelegate\/willOpenURL(url:)","doc:\/\/me.superwall.Paywall\/documentation\/Paywall\/PaywallDelegate\/willPresentPaywall()"]}],"references":{"doc://me.superwall.Paywall/documentation/Paywall":{"role":"collection","title":"Paywall","abstract":[],"identifier":"doc:\/\/me.superwall.Paywall\/documentation\/Paywall","kind":"symbol","type":"topic","url":"\/documentation\/paywall"},"doc://me.superwall.Paywall/documentation/Paywall/PaywallDelegate/trackAnalyticsEvent(withName:params:)":{"role":"symbol","title":"trackAnalyticsEvent(withName:params:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"trackAnalyticsEvent"},{"kind":"text","text":"("},{"kind":"externalParam","text":"withName"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":", "},{"kind":"externalParam","text":"params"},{"kind":"text","text":": ["},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":" : "},{"kind":"keyword","text":"Any"},{"kind":"text","text":"])"}],"abstract":[{"type":"text","text":"Called when you should track a standard internal analytics event to your own system. If you want the event’s name as an enum, do this:"},{"type":"codeVoice","code":"let e = Paywall.EventName(rawValue: name)"}],"identifier":"doc:\/\/me.superwall.Paywall\/documentation\/Paywall\/PaywallDelegate\/trackAnalyticsEvent(withName:params:)","kind":"symbol","required":true,"type":"topic","url":"\/documentation\/paywall\/paywalldelegate\/trackanalyticsevent(withname:params:)"},"doc://me.superwall.Paywall/documentation/Paywall/PaywallDelegate/handleCustomPaywallAction(withName:)":{"role":"symbol","title":"handleCustomPaywallAction(withName:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"handleCustomPaywallAction"},{"kind":"text","text":"("},{"kind":"externalParam","text":"withName"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Called when the user taps a button with a custom "},{"type":"codeVoice","code":"data-pw-custom"},{"type":"text","text":" tag in your HTML paywall. See paywall.js for further documentation"}],"identifier":"doc:\/\/me.superwall.Paywall\/documentation\/Paywall\/PaywallDelegate\/handleCustomPaywallAction(withName:)","kind":"symbol","required":true,"type":"topic","url":"\/documentation\/paywall\/paywalldelegate\/handlecustompaywallaction(withname:)"},"doc://me.superwall.Paywall/documentation/Paywall/PaywallDelegate/isUserSubscribed()":{"role":"symbol","title":"isUserSubscribed()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"isUserSubscribed"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"abstract":[{"type":"text","text":"Decides whether a paywall should be presented programatically or by way of a trigger. A paywall will never be shown if this function returns "},{"type":"codeVoice","code":"true"},{"type":"text","text":". Return "},{"type":"codeVoice","code":"true"},{"type":"text","text":" if the user has active entitlements and "},{"type":"codeVoice","code":"false"},{"type":"text","text":" if the user does not."}],"identifier":"doc:\/\/me.superwall.Paywall\/documentation\/Paywall\/PaywallDelegate\/isUserSubscribed()","kind":"symbol","required":true,"type":"topic","url":"\/documentation\/paywall\/paywalldelegate\/isusersubscribed()"},"doc://me.superwall.Paywall/documentation/Paywall/PaywallDelegate/willOpenDeepLink(url:)":{"role":"symbol","title":"willOpenDeepLink(url:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"willOpenDeepLink"},{"kind":"text","text":"("},{"kind":"externalParam","text":"url"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"URL","preciseIdentifier":"s:10Foundation3URLV"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Called when the user taps a deep link in your HTML paywall."}],"identifier":"doc:\/\/me.superwall.Paywall\/documentation\/Paywall\/PaywallDelegate\/willOpenDeepLink(url:)","kind":"symbol","required":true,"type":"topic","url":"\/documentation\/paywall\/paywalldelegate\/willopendeeplink(url:)"},"doc://me.superwall.Paywall/documentation/Paywall/PaywallDelegate/didPresentPaywall()":{"role":"symbol","title":"didPresentPaywall()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"didPresentPaywall"},{"kind":"text","text":"()"}],"abstract":[{"type":"text","text":"Called right after the paywall is presented."}],"identifier":"doc:\/\/me.superwall.Paywall\/documentation\/Paywall\/PaywallDelegate\/didPresentPaywall()","kind":"symbol","required":true,"type":"topic","url":"\/documentation\/paywall\/paywalldelegate\/didpresentpaywall()"},"doc://me.superwall.Paywall/documentation/Paywall/PaywallDelegate":{"role":"symbol","title":"PaywallDelegate","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"PaywallDelegate"}],"abstract":[{"type":"text","text":"Methods for managing important Paywall lifecycle events. For example, telling the developer when to initiate checkout on a specific "},{"type":"codeVoice","code":"SKProduct"},{"type":"text","text":" and when to try to restore a transaction. Also includes hooks for you to log important analytics events to your product analytics tool."}],"identifier":"doc:\/\/me.superwall.Paywall\/documentation\/Paywall\/PaywallDelegate","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"PaywallDelegate"}],"url":"\/documentation\/paywall\/paywalldelegate"},"doc://me.superwall.Paywall/documentation/Paywall/PaywallDelegate/willPresentPaywall()":{"role":"symbol","title":"willPresentPaywall()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"willPresentPaywall"},{"kind":"text","text":"()"}],"abstract":[{"type":"text","text":"Called right before the paywall is presented."}],"identifier":"doc:\/\/me.superwall.Paywall\/documentation\/Paywall\/PaywallDelegate\/willPresentPaywall()","kind":"symbol","required":true,"type":"topic","url":"\/documentation\/paywall\/paywalldelegate\/willpresentpaywall()"},"doc://me.superwall.Paywall/documentation/Paywall/PaywallDelegate/restorePurchases(completion:)":{"role":"symbol","title":"restorePurchases(completion:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"restorePurchases"},{"kind":"text","text":"("},{"kind":"externalParam","text":"completion"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Called when the user initiates a restore. Add your restore logic here. Call the completion with "},{"type":"codeVoice","code":"true"},{"type":"text","text":" if the user’s transactions were restored or "},{"type":"codeVoice","code":"false"},{"type":"text","text":" if they weren’t."}],"identifier":"doc:\/\/me.superwall.Paywall\/documentation\/Paywall\/PaywallDelegate\/restorePurchases(completion:)","kind":"symbol","required":true,"type":"topic","url":"\/documentation\/paywall\/paywalldelegate\/restorepurchases(completion:)"},"doc://me.superwall.Paywall/documentation/Paywall/PaywallDelegate/willOpenURL(url:)":{"role":"symbol","title":"willOpenURL(url:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"willOpenURL"},{"kind":"text","text":"("},{"kind":"externalParam","text":"url"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"URL","preciseIdentifier":"s:10Foundation3URLV"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Called when the user opens a URL by selecting an element with the "},{"type":"codeVoice","code":"data-pw-open-url"},{"type":"text","text":" tag in your HTML paywall."}],"identifier":"doc:\/\/me.superwall.Paywall\/documentation\/Paywall\/PaywallDelegate\/willOpenURL(url:)","kind":"symbol","required":true,"type":"topic","url":"\/documentation\/paywall\/paywalldelegate\/willopenurl(url:)"},"doc://me.superwall.Paywall/documentation/Paywall/PaywallDelegate/purchase(product:)":{"role":"symbol","title":"purchase(product:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"purchase"},{"kind":"text","text":"("},{"kind":"externalParam","text":"product"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"SKProduct","preciseIdentifier":"c:objc(cs)SKProduct"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Called when the user initiates checkout for a product. Add your purchase logic here by either calling "},{"type":"codeVoice","code":"Purchases.shared.purchaseProduct()"},{"type":"text","text":" (if you use RevenueCat: https:\/\/sdk.revenuecat.com\/ios\/Classes\/RCPurchases.html#\/c:objc(cs)RCPurchases(im)purchaseProduct:withCompletionBlock:) or by using Apple’s StoreKit APIs"}],"identifier":"doc:\/\/me.superwall.Paywall\/documentation\/Paywall\/PaywallDelegate\/purchase(product:)","kind":"symbol","required":true,"type":"topic","url":"\/documentation\/paywall\/paywalldelegate\/purchase(product:)"},"doc://me.superwall.Paywall/documentation/Paywall/PaywallDelegate/handleLog(level:scope:message:info:error:)":{"role":"symbol","title":"handleLog(level:scope:message:info:error:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"handleLog"},{"kind":"text","text":"("},{"kind":"externalParam","text":"level"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":", "},{"kind":"externalParam","text":"scope"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":", "},{"kind":"externalParam","text":"message"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"info"},{"kind":"text","text":": ["},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":" : "},{"kind":"keyword","text":"Any"},{"kind":"text","text":"]?, "},{"kind":"externalParam","text":"error"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Error","preciseIdentifier":"s:s5ErrorP"},{"kind":"text","text":"?)"}],"abstract":[],"identifier":"doc:\/\/me.superwall.Paywall\/documentation\/Paywall\/PaywallDelegate\/handleLog(level:scope:message:info:error:)","kind":"symbol","required":true,"type":"topic","url":"\/documentation\/paywall\/paywalldelegate\/handlelog(level:scope:message:info:error:)"},"doc://me.superwall.Paywall/documentation/Paywall/PaywallDelegate/willDismissPaywall()":{"role":"symbol","title":"willDismissPaywall()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"willDismissPaywall"},{"kind":"text","text":"()"}],"abstract":[{"type":"text","text":"Called right before the paywall is dismissed."}],"identifier":"doc:\/\/me.superwall.Paywall\/documentation\/Paywall\/PaywallDelegate\/willDismissPaywall()","kind":"symbol","required":true,"type":"topic","url":"\/documentation\/paywall\/paywalldelegate\/willdismisspaywall()"},"doc://me.superwall.Paywall/documentation/Paywall/PaywallDelegate/didDismissPaywall()":{"role":"symbol","title":"didDismissPaywall()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"didDismissPaywall"},{"kind":"text","text":"()"}],"abstract":[{"type":"text","text":"Called right after the paywall is dismissed."}],"identifier":"doc:\/\/me.superwall.Paywall\/documentation\/Paywall\/PaywallDelegate\/didDismissPaywall()","kind":"symbol","required":true,"type":"topic","url":"\/documentation\/paywall\/paywalldelegate\/diddismisspaywall()"}}}